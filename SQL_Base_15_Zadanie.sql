/*-- Задание 1: Представление африканских стран
PRINT 'Задание 1: Список африканских стран';
GO
CREATE VIEW АфриканскиеСтраны AS
SELECT
    Название,
    Столица,
    Площадь,
    Население
FROM
    Страны
WHERE
    Континент = 'Африка'
    AND Население > 10000
    AND Площадь > 5000;
GO
-- Использование представления
SELECT 'Задание 1: Результат' AS [Задание], * FROM АфриканскиеСтраны;

-- Задание 2: Представление континентов с их характеристиками
PRINT 'Задание 2: Характеристики континентов';
GO
CREATE VIEW ХарактеристикиКонтинентов AS
SELECT
    Континент,
    AVG(Площадь) AS СредняяПлощадь,
    ROUND(AVG(Население / NULLIF(Площадь, 0)), 2) AS СредняяПлотность
FROM
    Страны
GROUP BY
    Континент;
GO
-- Использование представления
SELECT 'Задание 2: Результат' AS [Задание], * FROM ХарактеристикиКонтинентов;

-- Задание 3: Представление преподавателей
PRINT 'Задание 3: Информация о преподавателях';
GO
CREATE VIEW ПреподавателиИнформация AS
SELECT
    С.Фамилия,
    С.Должность,
    П.Звание,
    П.Степень,
    К.Название AS МестоРаботы,
    COUNT(Э.Код) AS КоличествоЭкзаменов
FROM
    Сотрудник С
    INNER JOIN Преподаватель П ON С.Таб_номер = П.Таб_номер
    INNER JOIN Кафедра К ON С.Шифр = К.Шифр
    LEFT JOIN Экзамен Э ON С.Таб_номер = Э.Таб_номер
GROUP BY
    С.Фамилия, С.Должность, П.Звание, П.Степень, К.Название;
GO
-- Использование представления
SELECT 'Задание 3: Результат' AS [Задание], * FROM ПреподавателиИнформация;
*/
/*-- Задание 4: Табличная переменная месяцев
PRINT 'Задание 4: Месяцы и их характеристики';
DECLARE @Месяцы TABLE (
    [Номер месяца] INT,
    [Название месяца] VARCHAR(20),
    [Количество дней] INT
);

DECLARE @Месяц INT = 1;

WHILE @Месяц <= 12
BEGIN
    INSERT INTO @Месяцы
    VALUES (
        @Месяц,
        DATENAME(MONTH, DATEFROMPARTS(YEAR(GETDATE()), @Месяц, 1)),
        DAY(EOMONTH(DATEFROMPARTS(YEAR(GETDATE()), @Месяц, 1)))
    );
    SET @Месяц = @Месяц + 1;
END;

-- Использование табличной переменной
SELECT 'Задание 4: Результат' AS [Задание], * FROM @Месяцы;
*/
-- Задание 5: Табличная переменная стран с малой площадью
PRINT 'Задание 5: Страны с малой площадью';
DECLARE @СтраныМалойПлощади TABLE (
    Название VARCHAR(50),
    Континент VARCHAR(50),
    Площадь FLOAT
);

INSERT INTO @СтраныМалойПлощади
SELECT
    С.Название,
    С.Континент,
    С.Площадь
FROM
    Страны С
    INNER JOIN (
        SELECT
            Континент,
            AVG(Площадь) AS СредняяПлощадь
        FROM
            Страны
        GROUP BY
            Континент
    ) AS Средняя ON С.Континент = Средняя.Континент
WHERE
    С.Площадь * 100 < Средняя.СредняяПлощадь;

-- Использование табличной переменной
SELECT 'Задание 5: Результат' AS [Задание], * FROM @СтраныМалойПлощади;

-- Задание 6: Локальная временная таблица недель
PRINT 'Задание 6: Локальная временная таблица недель';
SELECT
    DATEPART(WEEK, Дата) AS [Номер недели],
    COUNT(DISTINCT Код) AS [Количество экзаменов],
    COUNT(DISTINCT Рег_номер) AS [Количество студентов]
INTO
    #Недели
FROM
    Экзамен
GROUP BY
    DATEPART(WEEK, Дата);

-- Использование временной таблицы
SELECT 'Задание 6: Результат' AS [Задание], * FROM #Недели;
DROP TABLE #Недели;

-- Задание 7: Глобальная временная таблица континентов
PRINT 'Задание 7: Глобальная временная таблица континентов';
CREATE TABLE ##КонтинентыПлощади (
    Континент VARCHAR(50),
    НаибольшаяПлощадь FLOAT,
    НаименьшаяПлощадь FLOAT
);

INSERT INTO ##КонтинентыПлощади
SELECT
    Континент,
    MAX(Площадь) AS НаибольшаяПлощадь,
    MIN(Площадь) AS НаименьшаяПлощадь
FROM
    Страны
GROUP BY
    Континент;

-- Использование глобальной временной таблицы
SELECT 'Задание 7: Результат' AS [Задание], * FROM ##КонтинентыПлощади;
DROP TABLE ##КонтинентыПлощади;

-- Задание 8: Обобщенное табличное выражение
PRINT 'Задание 8: Сотрудники с зарплатой ниже средней по факультету';
WITH СредняяЗарплатаПоФакультету AS (
    SELECT
        Ф.Название AS Факультет,
        AVG(С.Зарплата) AS СредняяЗарплата
    FROM
        Сотрудник С
        INNER JOIN Кафедра К ON С.Шифр = К.Шифр
        INNER JOIN Факультет Ф ON К.ШифрФакультета = Ф.Шифр
    GROUP BY
        Ф.Название
)
SELECT 'Задание 8: Результат' AS [Задание],
    С.Фамилия,
    С.Зарплата,
    СЗФ.Факультет,
    СЗФ.СредняяЗарплата
FROM
    Сотрудник С
    INNER JOIN Кафедра К ON С.Шифр = К.Шифр
    INNER JOIN Факультет Ф ON К.ШифрФакультета = Ф.Шифр
    INNER JOIN СредняяЗарплатаПоФакультету СЗФ ON Ф.Название = СЗФ.Факультет
WHERE
    С.Зарплата < СЗФ.СредняяЗарплата;

/*-- Задание 9: Удаление всех созданных представлений
PRINT 'Задание 9: Удаление представлений';
DROP VIEW IF EXISTS АфриканскиеСтраны;
DROP VIEW IF EXISTS ХарактеристикиКонтинентов;
DROP VIEW IF EXISTS ПреподавателиИнформация;*/